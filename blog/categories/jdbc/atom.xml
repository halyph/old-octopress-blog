<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jdbc | Knowledge Is Everything]]></title>
  <link href="http://halyph.com/blog/categories/jdbc/atom.xml" rel="self"/>
  <link href="http://halyph.com/"/>
  <updated>2015-04-06T23:30:49+03:00</updated>
  <id>http://halyph.com/</id>
  <author>
    <name><![CDATA[Orest Ivasiv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Use Embedded H2 With Web Console?]]></title>
    <link href="http://halyph.com/blog/2015/01/22/how-to-use-embedded-h2-with-h2-console/"/>
    <updated>2015-01-22T00:55:03+02:00</updated>
    <id>http://halyph.com/blog/2015/01/22/how-to-use-embedded-h2-with-h2-console</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/blog/java.png"></p>

<p>There are several Java SQL databases which supports both server and embedded modes: <a href="http://www.h2database.com/">H2</a>, <a href="http://hsqldb.org/">HSQLDB</a> and <a href="http://db.apache.org/derby/">Derby</a>. The most interesting for me is H2 with own web <a href="http://www.h2database.com/html/quickstart.html#h2_console">Console</a>.</p>

<p>The aim of this post is to show how to connect from H2 Console to embedded in-memory H2.</p>

<blockquote><p>H2 currently supports three servers: a web server (for the H2 Console), a TCP server (for client/server connections) and an PG server (for PostgreSQL clients). <strong>Please note that only the web server supports browser connections.</strong> The servers can be started in different ways, one is using the Server tool. Starting the server doesn&rsquo;t open a database - databases are opened as soon as a client connects.</p></blockquote>

<p>The next steps have to be performed to connect to embedded DB and populate initial data:</p>

<ol>
<li>Load DB driver</li>
<li>Get <code>Connection</code></li>
<li>Create <code>Statement</code> and <code>executeUpate</code> queries</li>
<li>Create TCP <code>Server</code>. <em>We should start serve to make in-memory DB available for another process</em></li>
</ol>


<a name="Let.s.try.to.implement.this:"></a>
<h3>Let&rsquo;s try to implement this:</h3>

<ul>
<li>Run sample application
&#8220;` java</li>
</ul>


<p>public class App {
    private static final String DBNAME = &ldquo;mytest&rdquo;;</p>

<pre><code>public static void main(String[] args) throws ClassNotFoundException, SQLException, IOException {
    // open the in-memory database within a VM

    Class.forName("org.h2.Driver"); // (1)
    Connection conn 
        = DriverManager.getConnection("jdbc:h2:mem:" + DBNAME, "sa", "sa"); // (2)
    // username:password are very important and must be used for connecting via H2 Console

    Statement stat = conn.createStatement(); // (3)
    stat.executeUpdate("create table mytbl(id int primary key, name varchar(255))");
    stat.executeUpdate("insert into mytbl values(1, 'Hello')");
    stat.executeUpdate("insert into mytbl values(2, 'World')");

    // Verify that sample data was really inserted
    ResultSet rs = stat.executeQuery("select * from mytbl");
    System.out.println("ResultSet output:");
    while (rs.next()) {
        System.out.println("&gt; " + rs.getString("name"));
    }

    // start a TCP server
    Server server = Server.createTcpServer().start(); // (4)
    // .. use in embedded mode ..

    // or use it from another process:
    System.out.println("Server started and connection is open.");
    System.out.println("URL: jdbc:h2:" + server.getURL() + "/mem:" + DBNAME);

    System.out.println("\n");
    System.out.println(
            "now start the H2 Console in another process using:\n" +
            "$ cd h2/bin; java -cp h2-1.4.185.jar org.h2.tools.Console -web -browser");

    System.out.println("Press [Enter] to stop.");
    System.in.read();

    System.out.println("Stopping server and closing the connection");

    rs.close();
    server.stop();
    conn.close();
    System.out.println("Server is STOPPED");
}
</code></pre>

<p>}
<code>
* Output for previous run:
</code>
ResultSet output:</p>

<blockquote><p>Hello
World
Server started and connection is open.
URL: jdbc:h2:tcp://192.168.1.100:9092/mem:mytest</p></blockquote>

<p>now start the H2 Console in another process using:
$ cd h2/bin; java -cp h2-1.4.185.jar org.h2.tools.Console -web -browser
Press [Enter] to stop.
<code>``
* We assume that h2 installation bundle (zip file) was downloaded (from http://www.h2database.com/html/download.html) beforehand and unpacked in some folder
* Go into H2 "install/unpack" folder and run the next command</code>cd h2/bin; java -cp h2-1.4.185.jar org.h2.tools.Console -web -browser<code>
* Now we should copy URL (from sample App output) and credentials sa/sa to login into Console
  * **URL:** jdbc:h2:tcp://192.168.1.100:9092/mem:mytest
  * **Username:** sa
  * **Password:** sa
* Login window (opened from shell by</code>org.h2.tools.Console`)
<img class="left" src="/images/posts/h2console_login.png"></p>

<p>Verify that our custom table contains just inserted values
<img class="left" src="/images/posts/h2console_sqlwindow.png"></p>

<a name="Add.Embedded.TCP.and.Web.Servers"></a>
<h3>Add Embedded TCP and Web Servers</h3>

<p>Now, it&rsquo;s time to add small improvements.
The idea is to switch <em>on</em> H2 Console <strong>Web Server</strong> and <strong>TCP Server</strong> to have external access.
We should add/update item (4) in previous code snippets like this<br/>
&#8220;` java
public class App {
    private static final String DBNAME = &ldquo;mytest&rdquo;;</p>

<pre><code>public static void main(String[] args) throws ClassNotFoundException, SQLException, IOException {
</code></pre>

<p>&hellip;</p>

<pre><code>    Server webServer = Server.createWebServer("-webAllowOthers","-webPort","8082").start(); // (4a)
    Server server = Server.createTcpServer("-tcpAllowOthers","-tcpPort","9092").start();    // (4b)
    // .. use in embedded mode ..
</code></pre>

<p>&hellip;
        server.stop();
        webServer.stop();
        conn.close();
        System.out.println(&ldquo;Server is STOPPED&rdquo;);
    }
}
&#8220;`</p>

<ul>
<li>After this we can access to Web Console without running external service

<ul>
<li>Simply use URL in  browser (access to <strong>Web Server</strong>): <a href="http://localhost:8082/">http://localhost:8082/</a></li>
</ul>
</li>
<li>Use any JDBC client (see IntelliJ IDEA as a sample below)

<ul>
<li>access to <strong>TCP Server</strong>
<img class="left" src="/images/posts/h2console_idea.png"></li>
</ul>
</li>
</ul>


<a name="References"></a>
<h2>References</h2>

<ol>
<li><a href="http://stackoverflow.com/questions/5077584/h2-database-in-memory-mode-cannot-be-accessed-by-console">H2 database in memory mode cannot be accessed by Console</a></li>
<li><a href="http://www.h2database.com/html/tutorial.html">Official H2 Tutorial</a></li>
<li><a href="http://h2database.com/javadoc/org/h2/tools/Server.html">H2 Server methods</a></li>
<li><a href="https://github.com/halyph/tutorials/tree/master/h2-embedded-console">GitHub Sources</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
