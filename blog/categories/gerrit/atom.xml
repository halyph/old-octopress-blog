<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gerrit | Knowledge Is Everything]]></title>
  <link href="http://halyph.com/blog/categories/gerrit/atom.xml" rel="self"/>
  <link href="http://halyph.com/"/>
  <updated>2016-03-19T15:13:00+02:00</updated>
  <id>http://halyph.com/</id>
  <author>
    <name><![CDATA[Orest Ivasiv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git, Jenkins, Gerrit, Code Review and Pre-tested Commits]]></title>
    <link href="http://halyph.com/blog/2013/08/17/git-jenkins-gerrit-code-review-and-pre/"/>
    <updated>2013-08-17T13:16:00+03:00</updated>
    <id>http://halyph.com/blog/2013/08/17/git-jenkins-gerrit-code-review-and-pre</id>
    <content type="html"><![CDATA[<div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-TQLoXCK0UjM/UH8CEqejzkI/AAAAAAAAArU/vx6ohZLn3K0/s1600/git-logo.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="200" src="http://1.bp.blogspot.com/-TQLoXCK0UjM/UH8CEqejzkI/AAAAAAAAArU/vx6ohZLn3K0/s200/git-logo.png" width="200" /></a><a href="http://3.bp.blogspot.com/-G0y3vRvF8Gk/UODT7t-pUCI/AAAAAAAABF4/JxoydHYGUvQ/s1600/logo.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="200" src="http://3.bp.blogspot.com/-G0y3vRvF8Gk/UODT7t-pUCI/AAAAAAAABF4/JxoydHYGUvQ/s200/logo.png" width="144" /></a></div>


<p><br />This post is a note to myself. There are bunch of tools on the market which can be successfully used in yours development process. But, I&rsquo;m interested in <a href="http://git-scm.com/" target="_blank">git</a>,&nbsp;<a href="http://jenkins-ci.org/" target="_blank">Jenkins</a><a href="http://jenkins-ci.org/" target="_blank"> </a>only. Also, git/jenkins supports tons on different workflows, but here I&rsquo;d like to talk about pre-tested commits.<br /><br />So, what does it mean <i>&ldquo;pre-tested commit&rdquo;</i>? Initially this type of commits was introduced in <a href="http://www.jetbrains.com/teamcity/" target="_blank">TeamCity</a> CI Server:<br /><blockquote class="tr_bq">Typically, your team submits code to Version Control BEFORE verifying that it works, and risks breaking the             build every single time — causing more problems than necessary. <a href="http://www.jetbrains.com/teamcity/features/delayed_commit.html" target="_blank">[2]</a></blockquote><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-sW4kC9t9Q9I/Ug9IK5q5kiI/AAAAAAAABpo/oAnCmJ2Hy8k/s1600/Standard-scenario.gif" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="320" src="http://4.bp.blogspot.com/-sW4kC9t9Q9I/Ug9IK5q5kiI/AAAAAAAABpo/oAnCmJ2Hy8k/s320/Standard-scenario.gif" width="279" /></a><a href="http://1.bp.blogspot.com/-AmCwe9rar4k/Ug9IA7cEraI/AAAAAAAABpk/jVpX2bYsSss/s1600/TeamCity-scenario.gif" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="320" src="http://1.bp.blogspot.com/-AmCwe9rar4k/Ug9IA7cEraI/AAAAAAAABpk/jVpX2bYsSss/s320/TeamCity-scenario.gif" width="279" /></a></div><br />But, it&rsquo;s TeamCity and we need similar functionality in Jenkins.<br /><br />There are several ways to get it:<br /><ul><li>Implement Jenkins plugin which can work with integration branches and simulate pre-tested workflow</li><li>Reuse existing tool like <a href="http://code.google.com/p/gerrit/" target="_blank">Gerrit</a>.&nbsp; </li></ul>But you say <a href="http://code.google.com/p/gerrit/" target="_blank">Gerrit</a> is a code review tool. And you are right. Fortunately, <a href="http://code.google.com/p/gerrit/" target="_blank">Gerrit</a> support pre-tested commit in his code review workflows (see source <a href="http://blogs.collab.net/teamforge/teamforge-git-gerrit-integration-with-jenkins-ci" target="_blank">[3]</a>):<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-8RxVzZiVAw8/Ug9J3vwhvaI/AAAAAAAABp0/PJWcEhal96w/s1600/Git_gerrit_jenkins.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="419" src="http://4.bp.blogspot.com/-8RxVzZiVAw8/Ug9J3vwhvaI/AAAAAAAABp0/PJWcEhal96w/s640/Git_gerrit_jenkins.png" width="640" /></a></div><br /><blockquote class="tr_bq"><a href="http://gerrit.googlecode.com/" target="_blank" title="Gerrit Code Review">Gerrit Code Review</a> represents a step-forward in the way the team work on the code and  share idea and the ownership of the design and coding decisions.&nbsp; (see <a href="http://jenkinsmobi.me/2012/03/21/jenkins-ci-and-gerrit-code-review-dance-together/" target="_blank">[4]</a>)</blockquote>&nbsp;Tools required to support this workflow:<br /><ul><li><a href="http://git-scm.com/" target="_blank">git</a></li><li><a href="http://jenkins-ci.org/" target="_blank">Jenkins</a></li><li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Gerrit+Trigger" target="_blank">Jenkins Gerrit Trigger</a></li></ul><br />&nbsp;To see all these in action I&rsquo;ve added two videos which demonstrate this concept:<br /><iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/LvCVw5gnAo0" width="560"></iframe> <iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/96wfa3ipF34" width="560"></iframe><br /><br />Also, it worth to review this slides. Here is nicely demonstrated why <a href="http://code.google.com/p/gerrit/" target="_blank">Gerrit</a> is cool and why un-tested commit is bad.<br /><iframe allowfullscreen="" frameborder="0" height="356" marginheight="0" marginwidth="0" mozallowfullscreen="" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/12081441" style="border-width: 1px 1px 0; border: 1px solid #CCC; margin-bottom: 5px; max-width: 427px;" webkitallowfullscreen="" width="100%"> </iframe> <br /><div style="margin-bottom: 5px;"><b> <a href="https://www.slideshare.net/lucamilanesio/gerrit-code-review" target="_blank" title="Gerrit Code Review">Gerrit Code Review</a> </b> from <b><a href="http://www.slideshare.net/lucamilanesio" target="_blank">Luca Milanesio</a></b> </div><br /><br /><b>References:</b><br /><ol><li><a href="http://www.tomslabs.com/index.php/2011/10/pretested-commits-why-does-it-matter-to-us/" target="_blank">Pretested commits – why does it matter to us?</a></li><li><a href="http://www.jetbrains.com/teamcity/features/delayed_commit.html" target="_blank">Pre-Tested Commit: No broken code in your version control. Ever.</a></li><li><a href="http://blogs.collab.net/teamforge/teamforge-git-gerrit-integration-with-jenkins-ci" target="_blank">TeamForge Git /Gerrit Integration with Jenkins CI </a></li><li><a href="http://jenkinsmobi.me/2012/03/21/jenkins-ci-and-gerrit-code-review-dance-together/" target="_blank">Jenkins CI and Gerrit Code Review dance together</a></li><li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Designing+pre-tested+commit" target="_blank">Jeknins - Designing pre-tested commit</a></li><li><a href="https://wiki.openstack.org/wiki/Gerrit_Workflow" target="_blank">Open Stack - Gerrit Workflow </a></li><li><a href="https://wiki.openstack.org/wiki/GerritJenkinsGithub" target="_blank">Open Stack - Gerrit Jenkins Github</a></li></ol></p>
]]></content>
  </entry>
  
</feed>
