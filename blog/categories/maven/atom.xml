<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Maven | Knowledge Is Everything]]></title>
  <link href="http://halyph.com/blog/categories/maven/atom.xml" rel="self"/>
  <link href="http://halyph.com/"/>
  <updated>2015-02-16T00:51:46+02:00</updated>
  <id>http://halyph.com/</id>
  <author>
    <name><![CDATA[Orest Ivasiv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Maven Flow for Simple App Creation]]></title>
    <link href="http://halyph.com/blog/2015/02/13/maven-flow-for-simple-app-creation/"/>
    <updated>2015-02-13T00:18:30+02:00</updated>
    <id>http://halyph.com/blog/2015/02/13/maven-flow-for-simple-app-creation</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/blog/java.png"></p>

<p>I provided my reflections about <em>&ldquo;Java for Everything&rdquo;</em> in the previous <a href="/blog/2015/02/13/do-we-need-java-for-everything">post</a>.
Here we will review other implementation of this concept.</p>

<p>I have the next concerns about any Java application (big or small):</p>

<ul>
<li>library dependency management must be simple</li>
<li>it&rsquo;s very bad practice to distribute sources along with libraries (dependency management tools must be used instead: Ivy, Maven, Gradle, etc.)</li>
<li>small application might have a little bit different project layout (not equals to traditional Maven layout)</li>
<li>we should be able to setup IDE (in my case <a href="https://www.jetbrains.com/idea/">Intellij IDEA</a>) as quick a possible. I hate editing Java programs in plain text editor</li>
<li>it must be a convenient way to run Java application with different arguments in <em>production</em> and <em>development</em> modes</li>
</ul>


<h2>Use Case</h2>

<p>We have to create simple and small REST application based on <a href="https://github.com/perwendel/spark">Spark Java framework</a> (A Sinatra inspired framework for Java).</p>

<p>Here is the source:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">spark</span><span class="o">.</span><span class="na">Spark</span><span class="o">.</span><span class="na">get</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">spark</span><span class="o">.</span><span class="na">SparkBase</span><span class="o">.</span><span class="na">port</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="n">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span> <span class="kd">throws</span> <span class="n">NumberFormatException</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="nf">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">arg:</span> <span class="n">args</span><span class="o">)</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;&amp;gt; %s&quot;</span><span class="o">,</span> <span class="n">arg</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">get</span><span class="o">(</span><span class="s">&quot;/hello&quot;</span><span class="o">,</span> <span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">)</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span> <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So, here is the list of issues:</p>

<ul>
<li>get Spark dependency with all transitive dependencies</li>
<li>pass command-line arguments into the app</li>
<li>use this application in development mode and in &ldquo;production&rdquo; (packed in jar)</li>
</ul>


<h2>Traditional Maven Way</h2>

<ul>
<li><p>Generate empty project via Maven archetype
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mvn archetype:generate <span class="se">\</span>
</span><span class='line'>-DgroupId<span class="o">=</span>com.halyph <span class="se">\</span>
</span><span class='line'>-DartifactId<span class="o">=</span>sparkblog <span class="se">\</span>
</span><span class='line'>-Dpackage<span class="o">=</span>com.halyph.blog <span class="se">\</span>
</span><span class='line'>-Dversion<span class="o">=</span>1.0-SNAPSHOT <span class="se">\</span>
</span><span class='line'>-DarchetypeGroupId<span class="o">=</span>org.apache.maven.archetypes <span class="se">\</span>
</span><span class='line'>-DarchetypeArtifactId<span class="o">=</span>maven-archetype-quickstart <span class="se">\</span>
</span><span class='line'>-DinteractiveMode<span class="o">=</span><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>Open this in IDEA (I don&rsquo;t use other IDEs) via &ldquo;Open File or Project&rdquo; and select folder with generated <strong>pom.xml</strong> file. We don&rsquo;t need tests, so we can delete <em>src->test</em> folder and remove junit dependency from <strong>pom.xml</strong> file. Now, we can easily run our application via IDE.</p></li>
<li><p>Add Spark framework dependency to <strong>pom.xml</strong> and update our <strong>App</strong> class
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>       <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;groupId&gt;</span>com.halyph<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'><span class="nt">&lt;artifactId&gt;</span>sparkblog<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'><span class="nt">&lt;version&gt;</span>1.0-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;name&gt;</span>sparkblog<span class="nt">&lt;/name&gt;</span>
</span><span class='line'><span class="nt">&lt;url&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://maven.apache.org&quot;</span><span class="nt">&gt;</span>http://maven.apache.org<span class="nt">&lt;/a&gt;&lt;/url&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;properties&gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>project.build.sourceEncoding&gt;UTF-8<span class="ni">&amp;lt;</span>/project.build.sourceEncoding&gt;
</span><span class='line'><span class="nt">&lt;/properties&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;dependencies&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>com.sparkjava<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>spark-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>2.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependencies&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;build&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>3.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;target&gt;</span>1.8<span class="nt">&lt;/target&gt;</span>
</span><span class='line'>        <span class="nt">&lt;source&gt;</span>1.8<span class="nt">&lt;/source&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">halyph</span><span class="o">.</span><span class="na">blog</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">static</span> <span class="n">spark</span><span class="o">.</span><span class="na">Spark</span><span class="o">.</span><span class="na">get</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">NumberFormatException</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">String</span> <span class="n">myArgs</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">arg</span> <span class="o">:</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;&amp;gt; %s&quot;</span><span class="o">,</span> <span class="n">arg</span><span class="o">);</span>
</span><span class='line'>        <span class="n">myArgs</span> <span class="o">+=</span> <span class="n">arg</span> <span class="o">+</span> <span class="s">&quot; : &quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">finalMyArgs</span> <span class="o">=</span> <span class="n">myArgs</span><span class="o">;</span>
</span><span class='line'>    <span class="n">get</span><span class="o">(</span><span class="s">&quot;/hello&quot;</span><span class="o">,</span> <span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">)</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;Hello World!\n args = &quot;</span> <span class="o">+</span> <span class="n">finalMyArgs</span><span class="o">;</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This application can be easily run via IDE, but lets run it via Maven</p>

<ul>
<li>We should use <a href="http://mojo.codehaus.org/exec-maven-plugin/usage.html">Exec Maven Plugin</a> to run the app with all dependencies
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn clean compile <span class="nb">exec</span>:java -Dexec.mainClass<span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span>com.halyph.blog.App<span class="p">&amp;</span>rdquo<span class="p">;</span>  -Dexec.args<span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="m">9090</span> one <span class="m">1</span> 2<span class="p">&amp;</span>rdquo<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Scanning <span class="k">for</span> projects<span class="p">&amp;</span>hellip<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Building sparkblog 1.0-SNAPSHOT
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;</span> maven-clean-plugin:2.4.1:clean <span class="o">(</span>default-clean<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Deleting d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;</span> maven-resources-plugin:2.5:resources <span class="o">(</span>default-resources<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>debug<span class="o">]</span> execute contextualize
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Using <span class="p">&amp;</span>lsquo<span class="p">;</span>UTF-8<span class="p">&amp;</span>rsquo<span class="p">;</span> encoding to copy filtered resources.
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> skip non existing resourceDirectory d:<span class="se">\M</span>yProjects<span class="se">\s</span>parkblog<span class="se">\s</span>rc<span class="se">\m</span>ain<span class="se">\r</span>esources
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;</span> maven-compiler-plugin:3.1:compile <span class="o">(</span>default-compile<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Changes detected - recompiling the module!
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Compiling <span class="m">1</span> <span class="nb">source </span>file to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\c</span>lasses
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &gt;&gt;&gt; <span class="nb">exec</span>-maven-plugin:1.2.1:java <span class="o">(</span>default-cli<span class="o">)</span> @ sparkblog &gt;&gt;&gt;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>lt<span class="p">;&amp;</span>lt<span class="p">;&amp;</span>lt<span class="p">;</span> <span class="nb">exec</span>-maven-plugin:1.2.1:java <span class="o">(</span>default-cli<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>lt<span class="p">;&amp;</span>lt<span class="p">;&amp;</span>lt<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;</span> <span class="nb">exec</span>-maven-plugin:1.2.1:java <span class="o">(</span>default-cli<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>mdash<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;9090&gt; one&gt; 1&gt; 2
</span><span class='line'><span class="o">[</span>Thread-1<span class="o">]</span> INFO spark.webserver.SparkServer - <span class="o">==</span> Spark has ignited <span class="p">&amp;</span>hellip<span class="p">;</span>
</span><span class='line'><span class="o">[</span>Thread-1<span class="o">]</span> INFO spark.webserver.SparkServer - &gt;&gt; Listening on 0.0.0.0:4567
</span><span class='line'><span class="o">[</span>Thread-1<span class="o">]</span> INFO org.eclipse.jetty.server.Server - jetty-9.0.2.v20130417
</span><span class='line'><span class="o">[</span>Thread-1<span class="o">]</span> INFO org.eclipse.jetty.server.ServerConnector - Started ServerConnector@4afe75c9<span class="o">{</span>HTTP/1.1<span class="o">}{</span>0.0.0.0:4567<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></li>
</ul>


<p>In case the application run configurations is persistent (&ldquo;main&rdquo; class and CLI arguments are changing rarely) we can configure it in <strong>pom.xml</strong>:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="ni">&amp;hellip;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.codehaus.mojo<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>exec-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.3.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>          <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>            <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>              <span class="nt">&lt;goal&gt;</span>java<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'>        <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mainClass&gt;</span>com.halyph.blog.App<span class="nt">&lt;/mainClass&gt;</span>
</span><span class='line'>          <span class="nt">&lt;arguments&gt;</span>
</span><span class='line'>            <span class="nt">&lt;argument&gt;</span>9090<span class="nt">&lt;/argument&gt;</span>
</span><span class='line'>            <span class="nt">&lt;argument&gt;</span>one<span class="nt">&lt;/argument&gt;</span>
</span><span class='line'>            <span class="nt">&lt;argument&gt;</span>1<span class="nt">&lt;/argument&gt;</span>
</span><span class='line'>            <span class="nt">&lt;argument&gt;</span>2<span class="nt">&lt;/argument&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/arguments&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>It&rsquo;s nice idea to use <code>mvn exec:java</code>, but it might be a little bit slow. So, we might decide to use some shell script which increase compiled application ramp up time. The problem is that the application have dependencies (which have transitive dependencies). I.e. <code>java</code> classpath have to be configured somehow.</li>
</ul>


<p>Well, I borrowed the ideas from &ldquo;<a href="http://saltnlight5.blogspot.com/2012/08/a-better-java-shell-script-wrapper.html">A better java shell script wrapper</a>&rdquo; script. Here it is:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/usr/bin/env bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Copyright <span class="m">2012</span> Zemian Deng&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;A wrapper script that run any Java application in unix/cygwin bash env.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;This script is assumed to be located in an application<span class="p">&amp;</span>rsquo<span class="p">;</span>s <span class="p">&amp;</span>ldquo<span class="p">;</span>bin<span class="p">&amp;</span>rdquo<span class="p">;</span> directory. It will&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;auto resolve its directory location relative to the application path <span class="o">(</span>which is one&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;parent up from the script.<span class="o">)</span> Therefore, this script can be run any where in the file&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;system and it will still reference the same application directory.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;This script will by default auto setup a Java classpath that picks up any <span class="p">&amp;</span>ldquo<span class="p">;</span>config<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;and <span class="p">&amp;</span>ldquo<span class="p">;</span>lib<span class="p">&amp;</span>rdquo<span class="p">;</span> directories under the application directory. It also will also add a&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;any typical Maven project output directories such as <span class="p">&amp;</span>ldquo<span class="p">;</span>target/test-classes<span class="p">&amp;</span>rdquo<span class="p">;</span>,&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="p">&amp;</span>ldquo<span class="p">;</span>target/classes<span class="p">&amp;</span>rdquo<span class="p">;</span>, and <span class="p">&amp;</span>ldquo<span class="p">;</span>target/dependency<span class="p">&amp;</span>rdquo<span class="p">;</span> into classpath. This can be disable by&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;setting <span class="nv">RUN_JAVA_NO_AUTOCP</span><span class="o">=</span>1.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;If the <span class="p">&amp;</span>ldquo<span class="p">;</span>Default parameters<span class="p">&amp;</span>rdquo<span class="p">;</span> section bellow doesn<span class="p">&amp;</span>rsquo<span class="p">;</span>t match to user<span class="p">&amp;</span>rsquo<span class="p">;</span>s env, <span class="k">then</span> user&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;may override these variables in their terminal session or preset them in shell<span class="p">&amp;</span>rsquo<span class="p">;</span>s&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;profile startup script. The values of all path should be in cygwin/unix path,&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;and this script will auto convert them into Windows path where is needed.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;User may customize the Java classpath by setting RUN_JAVA_CP, which will prefix to existing&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;classpath, or use the <span class="p">&amp;</span>ldquo<span class="p">;</span>-cp<span class="p">&amp;</span>rdquo<span class="p">;</span> option, which will postfix to existing classpath.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Usage:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;run-java <span class="o">[</span>java_opts<span class="o">]</span> &lt;java_main_class&gt; <span class="o">[</span>-cp /more/classpath<span class="o">]</span> <span class="o">[</span>-Dsysprop<span class="o">=</span>value<span class="o">]</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Example:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;run-java example.Hello&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;run-java example.Hello -Dname<span class="o">=</span>World&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;run-java org.junit.runner.JUnitCore example.HelloTest -cp <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$HOME</span>/apps/junit/lib/*<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Created by: Zemian Deng 03/09/2012&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;This run script dir <span class="o">(</span>resolve to absolute path<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;SCRIPT_DIR<span class="o">=</span><span class="k">$(</span><span class="nb">cd</span> <span class="k">$(</span>dirname <span class="nv">$0</span><span class="k">)</span> <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> <span class="nb">pwd</span><span class="k">)</span>    <span class="c"># This dir is where this script live.</span>
</span><span class='line'><span class="nv">APP_DIR</span><span class="o">=</span><span class="k">$(</span><span class="nb">cd</span> <span class="nv">$SCRIPT_DIR</span>/.. <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> <span class="nb">pwd</span><span class="k">)</span>      <span class="c"># Assume the application dir is one level up from script dir.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Default parameters&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;JAVA_HOME<span class="o">=</span><span class="k">${</span><span class="nv">JAVA_HOME</span><span class="p">:=</span><span class="nv">$HOME</span><span class="p">/apps/jdk</span><span class="k">}</span>     <span class="c"># This is the home directory of Java development kit.</span>
</span><span class='line'><span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_CP</span><span class="p">:=</span><span class="nv">$CLASSPATH</span><span class="k">}</span>     <span class="c"># A classpath prefix before -classpath option, default to $CLASSPATH</span>
</span><span class='line'><span class="nv">RUN_JAVA_OPTS</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_OPTS</span><span class="p">:=</span><span class="k">}</span>           <span class="c"># Java options (-Xmx512m -XX:MaxPermSize=128m etc)</span>
</span><span class='line'><span class="nv">RUN_JAVA_DEBUG</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_DEBUG</span><span class="p">:=</span><span class="k">}</span>         <span class="c"># If not empty, print the full java command line before executing it.</span>
</span><span class='line'><span class="nv">RUN_JAVA_NO_PARSE</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_NO_PARSE</span><span class="p">:=</span><span class="k">}</span>   <span class="c"># If not empty, skip the auto parsing of -D and -cp options from script arguments.</span>
</span><span class='line'><span class="nv">RUN_JAVA_NO_AUTOCP</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_NO_AUTOCP</span><span class="p">:=</span><span class="k">}</span> <span class="c"># If not empty, do not auto setup Java classpath</span>
</span><span class='line'><span class="nv">RUN_JAVA_DRY</span><span class="o">=</span><span class="k">${</span><span class="nv">RUN_JAVA_DRY</span><span class="p">:=</span><span class="k">}</span>             <span class="c"># If not empty, do not exec Java command, but just print&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;OS specific support.  <span class="nv">$var</span> &lt;em&gt;must&lt;/em&gt; be <span class="nb">set </span>to either <span class="nb">true </span>or false.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;CYGWIN<span class="o">=</span><span class="nb">false</span><span class="p">;</span>
</span><span class='line'><span class="k">case</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>&lt;code&gt;uname&lt;/code&gt;<span class="p">&amp;</span>rdquo<span class="p">;</span> in
</span><span class='line'>  CYGWIN*<span class="o">)</span> <span class="nv">CYGWIN</span><span class="o">=</span><span class="nb">true</span> <span class="p">;;</span>
</span><span class='line'><span class="k">esac</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Define where is the java executable is&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;JAVA_CMD<span class="o">=</span>java
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$JAVA_HOME</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="nv">JAVA_CMD</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$JAVA_HOME</span>/bin/java<span class="p">&amp;</span>rdquo<span class="p">;</span>
</span><span class='line'><span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Auto setup applciation<span class="p">&amp;</span>rsquo<span class="p">;</span>s Java Classpath <span class="o">(</span>only <span class="k">if</span> they exists<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> -z <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_NO_AUTOCP</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$APP_DIR</span>/config<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span>:<span class="nv">$APP_DIR</span>/config<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">;</span> <span class="k">fi</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$APP_DIR</span>/target/test-classes<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span>:<span class="nv">$APP_DIR</span>/target/test-classes<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">;</span> <span class="k">fi</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$APP_DIR</span>/target/classes<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span>:<span class="nv">$APP_DIR</span>/target/classes<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">;</span> <span class="k">fi</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$APP_DIR</span>/target/dependency<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span>:<span class="nv">$APP_DIR</span>/target/dependency/&lt;em&gt;<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">;</span> <span class="k">fi</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> -d <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$APP_DIR</span>/lib<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span>:<span class="nv">$APP_DIR</span>/lib/&lt;/em&gt;<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">;</span> <span class="k">fi</span>
</span><span class='line'><span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ARGS<span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$@</span><span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Parse addition <span class="p">&amp;</span>ldquo<span class="p">;</span>-cp<span class="p">&amp;</span>rdquo<span class="p">;</span> and <span class="p">&amp;</span>ldquo<span class="p">;</span>-D<span class="p">&amp;</span>rdquo<span class="p">;</span> after the Java main class from script arguments&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;This is <span class="k">done</span> <span class="k">for</span> convenient sake so users <span class="k">do</span> not have to <span class="nb">export </span>RUN_JAVA_CP and RUN_JAVA_OPTS&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;saparately, but now they can pass into end of this run-java script instead.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;This can be disable by setting <span class="nv">RUN_JAVA_NO_PARSE</span><span class="o">=</span>1.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> -z <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_NO_PARSE</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="c"># Prepare variables for parsing</span>
</span><span class='line'>    <span class="nv">FOUND_CP</span><span class="o">=</span>
</span><span class='line'>    NEW_ARGS<span class="o">[</span>0<span class="o">]=</span><span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>rsquo<span class="p">;</span>
</span><span class='line'>    <span class="nv">IDX</span><span class="o">=</span>0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# Parse all arguments and look <span class="k">for</span> <span class="s2">&quot;-cp&quot;</span> and <span class="s2">&quot;-D&quot;</span>
</span><span class='line'><span class="k">for</span> ARG in <span class="s2">&quot;$@&quot;</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[[</span> -n <span class="nv">$FOUND_CP</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="s2">&quot;$RUN_JAVA_CP:$ARG&quot;</span>
</span><span class='line'>        <span class="nv">FOUND_CP</span><span class="o">=</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="k">case</span> <span class="nv">$ARG</span> in
</span><span class='line'>        <span class="s1">&#39;-cp&#39;</span><span class="o">)</span>
</span><span class='line'>            <span class="nv">FOUND_CP</span><span class="o">=</span>1
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>        <span class="s1">&#39;-D&#39;</span>*<span class="o">)</span>
</span><span class='line'>            <span class="nv">RUN_JAVA_OPTS</span><span class="o">=</span><span class="s2">&quot;$RUN_JAVA_OPTS $ARG&quot;</span>
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>        *<span class="o">)</span>
</span><span class='line'>            NEW_ARGS<span class="o">[</span><span class="nv">$IDX</span><span class="o">]=</span><span class="s2">&quot;$ARG&quot;</span>
</span><span class='line'>            <span class="nb">let </span><span class="nv">IDX</span><span class="o">=</span><span class="nv">$IDX</span>+1
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>        <span class="k">esac</span>
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="nv">ARGS</span><span class="o">=</span><span class="s2">&quot;${NEW_ARGS[@]}&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fi&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Convert Windows Java Classpath&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="nv">$CYGWIN</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="nv">RUN_JAVA_CP</span><span class="o">=</span><span class="k">$(</span>cygpath -mp <span class="nv">$RUN_JAVA_CP</span><span class="k">)</span>
</span><span class='line'><span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Display full Java command.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> -n <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_DEBUG</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> -n <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_DRY</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$JAVA_CMD</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="nv">$RUN_JAVA_OPTS</span> -cp <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="nv">$ARGS</span>
</span><span class='line'><span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Run Java Main class&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> -z <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_DRY</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$JAVA_CMD</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="nv">$RUN_JAVA_OPTS</span> -cp <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$RUN_JAVA_CP</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="nv">$ARGS</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The main idea is to run <code>mvn dependency:copy-dependencies</code>, this will generate all the jar files into <code>target/dependency</code> folder</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn dependency:copy-dependencies
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Scanning <span class="k">for</span> projects<span class="p">&amp;</span>hellip<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Building sparkblog 1.0-SNAPSHOT
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;</span> maven-dependency-plugin:2.1:copy-dependencies <span class="o">(</span>default-cli<span class="o">)</span> @ sparkblog <span class="p">&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying spark-core-2.1.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\s</span>park-core-2.1.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-http-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-http-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-io-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-io-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-security-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-security-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-server-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-server-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-servlet-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-servlet-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-util-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-util-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-webapp-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-webapp-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying jetty-xml-9.0.2.v20130417.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>etty-xml-9.0.2.v20130417.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying javax.servlet-3.0.0.v201112011016.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\j</span>avax.servlet-3.0.0.v201112011016.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying slf4j-api-1.7.7.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\s</span>lf4j-api-1.7.7.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying slf4j-simple-1.7.7.jar to d:<span class="se">\M</span>yProjects<span class="se">\j</span>wrapper<span class="se">\b</span>loggg<span class="se">\s</span>parkblog<span class="se">\t</span>arget<span class="se">\d</span>ependency<span class="se">\s</span>lf4j-simple-1.7.7.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> BUILD SUCCESS
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Total <span class="nb">time</span>: 2.978s
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Finished at: Thu Feb <span class="m">12</span> 18:22:54 EET 2015
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Final Memory: 9M/243M
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> <span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Now, we can reuse the provided <em>above</em> script <strong>or</strong> use the provided <em>below</em> one-liner:
<code>
java -cp target\classes;target\dependency\* com.halyph.blog.App 9090 one 1 2
</code>
This one-liner is very simple and can be transformed to shell/batch scripts depending on the level of re-use you&rsquo;d like to implement.</p>

<ul>
<li>Now, it&rsquo;s time to created pre-packed application bundle which can be easily distributed. We will use <a href="http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/usage-program.html">Maven Application Assembler Plugin</a>:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>   <span class="ni">&amp;hellip;</span>
</span><span class='line'>    <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.codehaus.mojo<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>appassembler-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>1.9<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="c">&lt;!--</span>
</span><span class='line'><span class="c">      This (executions) section can be omitted.</span>
</span><span class='line'><span class="c">      In case it&#39;s omitted we should call the next command to generate wrapper:</span>
</span><span class='line'><span class="c">      mvn package appassembler:assemble</span>
</span><span class='line'><span class="c">      --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>        <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>          <span class="nt">&lt;phase&gt;</span>package<span class="nt">&lt;/phase&gt;</span>
</span><span class='line'>          <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>            <span class="nt">&lt;goal&gt;</span>assemble<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;programs&gt;</span>
</span><span class='line'>          <span class="nt">&lt;program&gt;</span>
</span><span class='line'>            <span class="nt">&lt;mainClass&gt;</span>com.halyph.blog.App<span class="nt">&lt;/mainClass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;id&gt;</span>app<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/program&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/programs&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<blockquote><p>The Application Assembler Plugin is a Maven plugin for generating scripts for starting java applications. All dependencies and the artifact of the project itself are placed in a generated Maven repository in a defined assemble directory. All artifacts (dependencies + the artifact from the project) are added to the classpath in the generated bin scripts.</p></blockquote></li>
</ul>


<p><a href="http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/usage-program.html">Maven Application Assembler Plugin</a> usage:
<code>
$ mvn package
$ target/appassembler/bin/app
</code></p>

<blockquote><ul>
<li><p>All dependencies and the artifact itself are placed in the defined assemble directory (defaults to <code>$project.build.directory/appassembler</code>).</p></li>
<li><p>A <code>bin/</code> directory is created in the assemble directory and the generated bin scripts are placed in that directory (defaults to both unix shell scripts and Windows bat files).</p></li>
</ul>
</blockquote>

<p>Note: <a href="http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/usage-program.html">Maven Application Assembler Plugin</a> have a lot of customization options, just check the documentation.</p>

<h2>Summary</h2>

<p>Here was shown that using such tool as Maven you can be productive and &ldquo;agile&rdquo; (use <a href="http://gradle.org">Gradle</a> if you&rsquo;d like to be in trend):</p>

<ul>
<li>generate project skeleton from scratch</li>
<li>open it in IDE without ceremony</li>
<li>call the app via Maven plugin</li>
<li>call it as plain CLI application, but with small ceremony (need to run <em>dependency:copy-dependencies</em>)</li>
<li>package the app for further distribution</li>
</ul>


<p>Yes, it&rsquo;s not a simple <em>write-one</em> Java &ldquo;script&rdquo;, but it&rsquo;s flexible enough to feel like it is.</p>

<h2>References</h2>

<ul>
<li><a href="/blog/2015/02/13/do-we-need-java-for-everything">Do We Need Java for Everything?</a></li>
<li><a href="http://saltnlight5.blogspot.com/2012/08/a-better-java-shell-script-wrapper.html">A better java shell script wrapper</a></li>
<li><a href="http://mojo.codehaus.org/exec-maven-plugin/usage.html">Exec Maven Plugin</a></li>
<li><a href="http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/usage-program.html">Maven Application Assembler Plugin</a></li>
<li><a href="http://blog.plesslweb.ch/post/6628462331/wrapper-script-for-java-command-line-applications">Wrapper Script for Java Command-Line Applications</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
